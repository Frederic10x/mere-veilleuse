@mixin title(
  $color: hsl(var(--primary)),
  $font-size: var(--h1),
  $uppercase: false,
  $bold: false,
  $line-height: 1.6,
  $letter-spacing: 1px
) {
  font-size: $font-size;
  font-family: var(--content-font);
  color: $color;
  line-height: $line-height;
  letter-spacing: $letter-spacing;
  @if ($uppercase) {
    text-transform: uppercase;
  }
  font-weight: if($bold, 700, 400);
}

@mixin text(
  $color: hsl(var(--primary)),
  $font-size: var(--p),
  $line-height: 1.6,
  $letter-spacing: normal
) {
  font-size: $font-size;
  color: $color;
  line-height: $line-height;
  letter-spacing: $letter-spacing;
}

@mixin label(
  $color: hsl(var(--primary)),
  $font-size: var(--label),
  $line-height: 1,
  $letter-spacing: normal
) {
  @include text($color, $font-size, $line-height, $letter-spacing);
}

@mixin object-fit($behaviour, $position: false) {
  width: 100%;
  height: 100%;
  object-fit: $behaviour;
  @if ($position) {
    object-position: $position;
  }
}

@mixin button(
  $hover-color: hsl(var(--grey-000)),
  $color: var(--white),
  $background-color: var(--primary),
  $hover-background-color: var(--primary)
) {
  position: relative;
  width: max-content;
  gap: 14px;
  padding: 12px 20px;
  color: hsl($color);
  font-size: var(--p);
  font-weight: 700;
  text-align: center;
  background-color: hsl($background-color);
  border: 2px solid hsl($background-color);
  cursor: pointer;
  user-select: none;
  z-index: 0;
  overflow: hidden;
  transition: color 420ms var(--transition-easing), background-color 420ms var(--transition-easing);
  &:not(:disabled, [disabled]):hover {
    color: hsl($background-color);
  }
  &:not(:disabled, [disabled])::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsl(var(--white));
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 420ms var(--transition-easing);
    z-index: -1;
  }
  &:not(:disabled, [disabled]):hover::after {
    transform-origin: left;
    transform: scaleX(100%);
  }
  &:is(:disabled, [disabled]) {
    color: hsl($background-color);
    background-color: hsla($background-color, 30%);
    cursor: not-allowed;
  }
}

@mixin link($color: var(--white), $bottom: -2px, $stroke-width: 3px) {
  position: relative;

  &::before {
    position: absolute;
    left: 0;
    bottom: $bottom;
    height: $stroke-width;
    width: 100%;
    transform: scaleX(0);
    transform-origin: right;
    background-color: hsl($color);
    transition: transform 320ms var(--transition-easing);
    content: '';
  }
  &:not(:disabled, [disabled]):hover::before {
    transform-origin: left;
    transform: scaleX(1);
  }
}
